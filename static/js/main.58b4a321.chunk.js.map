{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","App.js","serviceWorker.js","redux/state.js","index.js"],"names":["module","exports","nav","item","activeLink","dialogs","dialogsItems","dialog","postsBlock","posts","descriptionBlock","header","Header","react_default","a","createElement","className","s","Navbar","react_router_dom","to","activeClassName","concat","active","Post","props","src","message","likesCount","MyPosts","postsElements","map","p","MyPosts_Post_Post","ProfileInfo","alt","profile","Profile","Profile_ProfileInfo_ProfileInfo","Profile_MyPosts_MyPosts","DialogItem","path","id","name","Message","Dialogs","dialogElements","state","d","DialogsItem","messageElements","messages","m","Dialogs_Message_Message","Music","News","Settings","App","_props$state","dialogsPage","profilePage","components_Header_Header","components_Navbar_Navbar","react_router","render","components_Dialogs_Dialogs","components_Profile_Profile","compopnent","components_News_News","components_Music_Music","components_Settings_Settings","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58b4a321.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__SJi6x\",\"item\":\"Navbar_item__1TDW7\",\"activeLink\":\"Navbar_activeLink__39ANm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2zUv9\",\"dialogsItems\":\"Dialogs_dialogsItems__IXnyM\",\"dialog\":\"Dialogs_dialog__lOJgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__AHMqt\",\"posts\":\"MyPosts_posts__1n-BK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__x4uM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1-pO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1KRVQ\"};","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        {/*<img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />*/}\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music'activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg'/>\r\n                {props.message}\r\n                <div>\r\n                    <span>like</span> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2 className={s.posts}>My posts</h2>\r\n            <div>\r\n                <div>\r\n                    <textarea></textarea>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='./background.jpg' alt=\"fff\"/>\r\n            </div>\r\n            <div className={s.profile}></div>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPosts posts={props.posts} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return <div className={s.dialog}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return  <div className={s.message}>{props.message}</div>\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogElements = props.state.dialogs.map (d => <DialogItem name={d.name} id={d.id}/> );\r\n    let messageElements = props.state.messages.map (m => <Message message={m.message} />)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Music","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default News","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Profile from './components/Profile/Profile';\r\nimport Dialogs from './components/Dialogs/Dialogs';\r\nimport Music from './components/Music/Music';\r\nimport News from \"./components/News/News\";\r\nimport Settings from './components/Settings/Settings'\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\n\r\nconst App = (props) => {\r\n    const {dialogsPage, profilePage} = props.state;\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className='app-wrapper'>\r\n                <Header/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs' render={ () => <Dialogs state={dialogsPage} />} />\r\n                    <Route path='/profile' render={ () => <Profile posts={profilePage.posts} />} />\r\n                    <Route path='/news' compopnent={ () => <News/>} />\r\n                    <Route path='/music' render={ () => <Music/>} />\r\n                    <Route path='/settings' render={ () => <Settings/>} />\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>)\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","let state = {\r\n    dialogsPage: {\r\n        dialogs: [\r\n            {id: 1, name: 'Dima'},\r\n            {id: 2, name: 'Vova'},\r\n            {id: 3, name: 'Petr'},\r\n            {id: 4, name: 'Anna'},\r\n            {id: 5, name: 'Kate'},\r\n            {id: 6, name: 'Nina'}\r\n        ],\r\n        messages: [\r\n            {id: 1, message: 'Hi! How are you?'},\r\n            {id: 2, message: 'Hey!'},\r\n            {id: 3, message: 'Where are you?'},\r\n        ],\r\n    },\r\n\r\n    profilePage: {\r\n        posts: [\r\n            {id: 1, message: 'Hi, I\\'m here!', likesCount: 0},\r\n            {id: 2, message: 'Anyone\\'s here?', likesCount: 23}\r\n        ],\r\n    }\r\n};\r\n\r\n\r\nexport default state;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport state from './redux/state';\r\n\r\n\r\nReactDOM.render(<App state={state}/>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}